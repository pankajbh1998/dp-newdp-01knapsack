ll dp[2001][2001];
    ll wt[2001];
ll fun(ll n,ll w)
{
    if(w==0)
        return dp[n][w]=1;
    if(n==0)
        return dp[n][w]=0;
    if(dp[n][w]!=-1)
        return dp[n][w];
    if(wt[n]>w)
        return dp[n][w]=fun(n-1,w);
    return dp[n][w]=fun(n-1,w-wt[n])||fun(n-1,w);
}
int minidiff(vector<int>nums)
{
ll sum=0;
  for(auto it:nums)
    sum+=it;
 ll chk=ceil(sum*1.0/2)
   fun(nums.size(),chk);
   for(int i=1;i<=chk;i++)
   {
      if(dp[nums.size()][i]==1)
        ans=min(ans,sum-2*i]);
    }
    return ans;
}
